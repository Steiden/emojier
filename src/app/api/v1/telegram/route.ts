import { Bot, webhookCallback } from "grammy";
import { NextRequest, NextResponse } from "next/server";

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new Bot(process.env.TELEGRAM_TOKEN as string);

// –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
const addEmojis = (text: string): string => {
	const emojis = ["üòÄ", "üòÇ", "ü§©", "üöÄ", "üåü", "üçï", "üéâ"];
	return text
		.split(" ")
		.map((word) => {
			const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];
			return `${word}${randomEmoji}`;
		})
		.join(" ");
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message:text", async (ctx) => {
	const originalText = ctx.message.text;
	const emojiText = addEmojis(originalText);
	await ctx.reply(emojiText);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.catch((err) => {
	console.error("–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:", err);
});

// –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, polling)
if (process.env.NODE_ENV === "development") {
	bot.start();
	console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling –¥–ª—è dev");
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è webhook
export const POST = await webhookCallback(bot, "next-js");
